[installer]
modern-installation = false

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "miso"
version = "0.1.0"
description = "A deep learning-based multiscale integration of spatial omics with tumor morphology."
authors = ["Loic Herpin <loic.herpin@owkin.com>"]
readme = "README.md"

repository = "https://github.com/owkin/miso"

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
notebook = ">=6.4.12"
nbconvert = ">=6.5.0"
docformatter = ">=1.5.0"
ipdb = ">=0.13.9"
hydra-core = ">=1.3.1"
urllib3 = ">=1.26.16,<2.0.0"
matplotlib = "*"
scikit-learn = "*"
tensorboard = "*"
statsmodels = "*"
seaborn = "*"
scikit-image = "*"
scanpy = ">=1.10.1"
transformers = "*"
torch = ">=1.5.1, <3.0.0"
loguru = "*"
rich = "*"
imagecodecs = ">=2022.9.26"
openslide_python = ">=1.1.2"
mlflow = "*"


[tool.poetry.group.linting]
optional = true

[tool.poetry.group.linting.dependencies]
docformatter = {extras = ["tomli"], version = "*"}
mypy = ">=1.4"
pre-commit = ">=2.20.0"
ruff = ">=0.1.2"
flake8 = "*"
pandas-stubs = "*"
types-docutils = "*"
types-python-dateutil = "*"
types-setuptools = "*"
types-Jinja2 = "*"
types-MarkupSafe = "*"
types-PyYAML = "*"
typing_extensions = "*"

[tool.poetry.group.testing]
optional = true

[tool.poetry.group.testing.dependencies]
pytest = "*"
coverage = "*"
pytest-cov = "*"
pytest-sphinx = "*"
pytest-runner = "*"
pytest-profiling = "*"

[tool.ruff]
exclude = [
  ".git",
  ".github",
  ".dvc",
  "__pycache__",
  ".venv",
  ".mypy_cache",
   ".ruff_cache",
  ".pytest_cache",
  "conf.py",
]
lint.ignore = [
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "D105",  # undocumented magic method
  "E501",  # line too long, handled by black
  "E731",  # lambda-assignment
  "PLR0904", # too many public methods
  "PLR0913", # too many arguments
  "PLR2004", # magic value comparison
  "B019", # use of cache methods
  "B009", # getattr with constant value
  "N812", # lowercase imported as non constant
  "PLW2901", # loop variable overwritten by assignment
  "PT011", # broad pytest errors
]
lint.select = [
  "D",   # pydocstyle
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming conventions
  "C",   # flake8-comprehensions
  "B",   # flake8-bugbear
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "C90", # mccabe included in flake8
  "ASYNC", # flake8-async
]
line-length = 88  # Must be consistent with black parameter
target-version = "py37"  # Must be aligned with the Python lower bound

[tool.ruff.lint.isort]
known-first-party = ["{{cookiecutter.package_name}}"]
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.docformatter]
recursive = true
wrap-summaries = 88
wrap-descriptions = 87
